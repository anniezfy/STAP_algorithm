`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2022/07/23 17:52:38
// Design Name: 
// Module Name: dfdsfs
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2022/07/14 15:39:24
// Design Name: 
// Module Name: sim
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module sim();
    
    


parameter PERIOD = 10;
reg clk;
reg rst_n;
reg start;
reg [63:0] x;
reg [63:0] y;
wire signed[63:0]	angle;
wire signed[63:0]	mozhi;
wire 					finished;

initial begin
	clk = 1;
	rst_n = 1;
	start = 1;

	#10 rst_n =0;
		
		
	    x =64'h0000000020000000; //0.5
         y =64'h0000000040000000; //1
         
	 #10
	     y =64'h0000000020000000; //0.5
         x =64'h0000000004000000;  //0.0625
         
  	 #10
	     y =64'h0000000020000000; //0.5
         x =64'hfffffffff4000000; //-0.1875       
            
   /*
    #20
	    
	    x =64'hffffffff20000000;
         y =64'h0000000040000000;
         */
         
//	  y = 32'b1111111111111110_0000000000000000;
	#100000 $stop;	
end

always #(PERIOD/2) clk = ~clk;



cordic_arctan uut(
.clk(clk),
		.rst_n(rst_n),
		.x(x),
		.y(y),
		.start(start),
		.mozhi(mozhi),
		.angle(angle),
	
		.finished(finished)
);


endmodule

